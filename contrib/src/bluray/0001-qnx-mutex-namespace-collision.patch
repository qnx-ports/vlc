--- a/src/util/mutex.c	2025-03-04 15:12:14.925374357 -0500
+++ b/src/util/mutex.c	2025-03-04 15:13:11.843974977 -0500
@@ -41,25 +41,25 @@
     CRITICAL_SECTION cs;
 } MUTEX_IMPL;
 
-static int _mutex_lock(MUTEX_IMPL *p)
+static int _bd_mutex_lock(MUTEX_IMPL *p)
 {
     EnterCriticalSection(&p->cs);
     return 0;
 }
 
-static int _mutex_unlock(MUTEX_IMPL *p)
+static int _bd_mutex_unlock(MUTEX_IMPL *p)
 {
     LeaveCriticalSection(&p->cs);
     return 0;
 }
 
-static int _mutex_init(MUTEX_IMPL *p)
+static int _bd_mutex_init(MUTEX_IMPL *p)
 {
     InitializeCriticalSection(&p->cs);
     return 0;
 }
 
-static int _mutex_destroy(MUTEX_IMPL *p)
+static int _bd_mutex_destroy(MUTEX_IMPL *p)
 {
     DeleteCriticalSection(&p->cs);
     return 0;
@@ -70,7 +70,7 @@
 
 typedef pthread_mutex_t MUTEX_IMPL;
 
-static int _mutex_init(MUTEX_IMPL *p)
+static int _bd_mutex_init(MUTEX_IMPL *p)
 {
     pthread_mutexattr_t attr;
 
@@ -85,7 +85,7 @@
     return 0;
 }
 
-static int _mutex_lock(MUTEX_IMPL *p)
+static int _bd_mutex_lock(MUTEX_IMPL *p)
 {
     if (pthread_mutex_lock(p)) {
         BD_DEBUG(DBG_BLURAY|DBG_CRIT, "pthread_mutex_lock() failed !\n");
@@ -95,7 +95,7 @@
     return 0;
 }
 
-static int _mutex_unlock(MUTEX_IMPL *p)
+static int _bd_mutex_unlock(MUTEX_IMPL *p)
 {
     if (pthread_mutex_unlock(p)) {
         BD_DEBUG(DBG_BLURAY|DBG_CRIT, "pthread_mutex_unlock() failed !\n");
@@ -105,7 +105,7 @@
     return 0;
 }
 
-static int _mutex_destroy(MUTEX_IMPL *p)
+static int _bd_mutex_destroy(MUTEX_IMPL *p)
 {
     if (pthread_mutex_destroy(p)) {
         BD_DEBUG(DBG_BLURAY|DBG_CRIT, "pthread_mutex_destroy() failed !\n");
@@ -123,7 +123,7 @@
         BD_DEBUG(DBG_BLURAY|DBG_CRIT, "bd_mutex_lock() failed !\n");
         return -1;
     }
-    return _mutex_lock((MUTEX_IMPL*)p->impl);
+    return _bd_mutex_lock((MUTEX_IMPL*)p->impl);
 }
 
 int bd_mutex_unlock(BD_MUTEX *p)
@@ -132,7 +132,7 @@
         BD_DEBUG(DBG_BLURAY|DBG_CRIT, "bd_mutex_unlock() failed !\n");
         return -1;
     }
-    return _mutex_unlock((MUTEX_IMPL*)p->impl);
+    return _bd_mutex_unlock((MUTEX_IMPL*)p->impl);
 }
 
 int bd_mutex_init(BD_MUTEX *p)
@@ -143,7 +143,7 @@
         return -1;
     }
 
-    if (_mutex_init((MUTEX_IMPL*)p->impl) < 0) {
+    if (_bd_mutex_init((MUTEX_IMPL*)p->impl) < 0) {
         X_FREE(p->impl);
         return -1;
     }
@@ -158,7 +158,7 @@
         return -1;
     }
 
-    if (_mutex_destroy((MUTEX_IMPL*)p->impl) < 0) {
+    if (_bd_mutex_destroy((MUTEX_IMPL*)p->impl) < 0) {
         return -1;
     }
 
